// 새로운 상장사 중심 스키마에 맞춘 그래프 검색 쿼리
// Params: $q, $limit, $lookback_days (domain은 선택사항)
WITH $q AS q,
     coalesce($lookback_days, 180) AS lb_days
WITH [t IN split(toLower(q), " ") WHERE size(t) >= 1] AS toks,
     datetime() - duration({days: lb_days})          AS lookback_ts

// A) 개선된 시드 노드 찾기 - 상장사 중심 3단계 접근법
// 1단계: 직접 키워드 매칭 (확장된 노드 타입)
CALL (toks) {
  UNWIND ['Company','Event','Product','FinancialMetric','Investment','Contract','Program','Agency'] AS L
  MATCH (s)
  WHERE L IN labels(s)
    AND ANY(t IN toks WHERE ANY(k IN keys(s) WHERE s[k] IS NOT NULL AND toLower(toString(s[k])) CONTAINS t))
  RETURN collect(DISTINCT s) AS direct_seeds
}

// 2단계: 상장사 중심 확장 (ticker, sector 포함)
CALL (toks) {
  MATCH (c:Company)
  WHERE ANY(t IN toks WHERE toLower(c.name) CONTAINS t OR toLower(coalesce(c.ticker, "")) CONTAINS t)
  OPTIONAL MATCH (c)-[*1..2]-(expanded)
  WHERE expanded:Event OR expanded:FinancialMetric OR expanded:Investment OR expanded:Product
  RETURN collect(DISTINCT c) + collect(DISTINCT expanded) AS listed_company_seeds
}

// 3단계: 이벤트 타입 기반 확장 (모든 산업 포괄)
CALL (toks) {
  WITH ['Earnings','Investment','Acquisition','Partnership','IPO','Contract','Export','R&D',
        'TechDevelopment','ProductLaunch','MarketExpansion','Collaboration','Merger',
        'Licensing','Patent','Innovation','Sustainability','ESG','Regulatory'] AS priority_events
  UNWIND priority_events AS event_type
  MATCH (e:Event {event_type: event_type})
  WHERE ANY(t IN toks WHERE toLower(e.title) CONTAINS t)
  OPTIONAL MATCH (e)-[*1]-(connected)
  RETURN collect(DISTINCT e) + collect(DISTINCT connected) AS event_seeds
}

WITH direct_seeds + listed_company_seeds + event_seeds AS all_seeds, lookback_ts
UNWIND all_seeds AS s
WITH collect(DISTINCT s) AS seeds, lookback_ts

// B) 시드 노드와 연결된 상장사 생태계 탐색
UNWIND seeds AS seed
OPTIONAL MATCH path = (seed)-[*1..2]-(connected)
WHERE connected IS NOT NULL
WITH seed, connected, relationships(path) AS rels, lookback_ts

// C) 상장사 우선 필터링 및 시드 포함
WITH collect(DISTINCT seed) + collect(DISTINCT connected) AS all_discovered_nodes, lookback_ts
UNWIND all_discovered_nodes AS n
WITH DISTINCT n, lookback_ts
WHERE n IS NOT NULL

// D) 시간 기반 필터링 및 상장사 우선순위
WITH n,
     CASE
       WHEN n.published_at IS NOT NULL AND toString(n.published_at) =~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}.*'
         THEN datetime(toString(n.published_at))
       WHEN n.award_date IS NOT NULL AND toString(n.award_date) =~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}.*'
         THEN datetime(toString(n.award_date))
       WHEN n.lastSeenAt IS NOT NULL AND toString(n.lastSeenAt) =~ '^[0-9]{4}-[0-9]{2}-[0-9]{2}.*'
         THEN datetime(toString(n.lastSeenAt))
       ELSE datetime('1970-01-01T00:00:00Z')
     END AS ts,
     CASE
       WHEN n:Company AND coalesce(n.is_listed, false) = true THEN 10
       WHEN n:Event AND n.event_type IN ['Earnings','Investment','Acquisition','IPO'] THEN 8
       WHEN n:FinancialMetric THEN 7
       WHEN n:Investment THEN 6
       WHEN n:Event THEN 5
       ELSE 3
     END AS priority_score,
     lookback_ts

// 시간 필터링: Event는 날짜 체크, 다른 노드는 통과
WHERE (n:Event AND ts >= lookback_ts) OR NOT n:Event

// E) 결과 반환 (상장사 우선, 최신순)
RETURN n, labels(n) AS labels, ts, [] AS all_relationships, priority_score
ORDER BY priority_score DESC, ts DESC
LIMIT $limit