[project]
name = "ontology-chat"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "anyio>=4.10.0",
    "fastapi>=0.116.1",
    "icecream>=2.1.8",
    "langchain>=0.3.27",
    "langchain-ollama>=0.3.7",
    "langgraph>=0.6.7",
    "langfuse>=2.52.0",
    "loguru>=0.7.3",
    "neo4j>=5.28.2",
    "openai>=1.106.1",
    "opensearch-py>=3.0.0",
    "plotly>=5.0.0",
    "pydantic-settings>=2.10.1",
    "pyvis>=0.3.2",
    "streamlit>=1.49.1",
    "typer>=0.17.4",
    "uvicorn>=0.35.0",
    "yfinance>=0.2.65",
    "dart-fss>=0.4.0",
    "requests>=2.31.0",
    "aiosqlite>=0.20.0",
    "asyncpg>=0.29.0",
    "aiomysql>=0.2.0",
    "langchain-community>=0.3.29",
    "mcp>=1.0.0",
    "sentence-transformers>=2.2.0",
    "scikit-learn>=1.3.0",
    "torch>=2.0.0",
    "numpy>=1.24.0",
    "prometheus-client>=0.20.0",
    "redis>=5.0.0",
    "psutil>=5.9.0",
    "fastapi-mcp>=0.4.0",
    "aiofiles>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=5.0.0",
    "pytest-mock>=3.14.0",
    "pytest-timeout>=2.3.0",
    "pytest-benchmark>=5.1.0",
    "httpx>=0.27.0",
    "black>=24.0.0",
    "ruff>=0.8.0",
    "mypy>=1.13.0",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = """
    --verbose
    --strict-markers
    --tb=short
    --cov=api
    --cov-report=term-missing
    --cov-report=html
    --asyncio-mode=auto
    --timeout=60
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
    "performance: Performance tests",
    "llm: Tests requiring LLM",
    "neo4j: Tests requiring Neo4j",
    "opensearch: Tests requiring OpenSearch",
]

[tool.coverage.run]
source = ["api"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstract",
]
