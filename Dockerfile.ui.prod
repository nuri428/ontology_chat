# UI 서버용 운영 Dockerfile
FROM python:3.12-slim as builder

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 패키지 업데이트 및 빌드 도구 설치
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# uv 설치
RUN pip install uv

# 프로젝트 파일 복사
COPY pyproject.toml uv.lock ./
COPY ui/ ./ui/

# 의존성 설치 (운영용 최적화)
RUN uv sync --frozen --no-dev

# 운영 이미지
FROM python:3.12-slim as production

# 작업 디렉토리 설정
WORKDIR /app

# 시스템 패키지 업데이트 및 필요한 패키지만 설치
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# 비root 사용자 생성
RUN groupadd -r appuser && useradd -r -g appuser appuser

# uv 설치
RUN pip install --no-cache-dir uv

# 빌드된 패키지 복사
COPY --from=builder /app/.venv /app/.venv

# 프로젝트 파일 복사
COPY ui/ ./ui/

# 소유권 변경
RUN chown -R appuser:appuser /app

# 비root 사용자로 전환
USER appuser

# 포트 노출
EXPOSE 8501

# 환경 변수 설정
ENV PYTHONPATH=/app
ENV API_BASE_URL=http://api:8000
ENV ENVIRONMENT=production
ENV PATH="/app/.venv/bin:$PATH"

# Streamlit 설정
ENV STREAMLIT_SERVER_HEADLESS=true
ENV STREAMLIT_SERVER_ENABLE_CORS=false
ENV STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=true

# 헬스체크
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Streamlit UI 서버 실행
CMD ["uv", "run", "streamlit", "run", "ui/main.py", "--server.address", "0.0.0.0", "--server.port", "8501", "--server.headless", "true"]
